* C-Minus Compilation to TM Code
* File: gcd.tm
* Standard prelude:
  0:     LD  6,0(0)     load gp with maxaddress
  1:    LDA  5,0(6)     copy to gp to fp
  2:     ST  0,0(0)     clear location 0
* Jump around i/o routines here
* code for input routine
  4:     ST  0,-1(5)    store return
  5:     IN  0,0,0  input
  6:     LD  7,-1(5)    return to caller
* code for output routine
  7:     ST  0,-1(5)    store return
  8:     LD  0,-2(5)    load output value
  9:    OUT  0,0,0  output
 10:     LD  7,-1(5)    return to caller
  3:    LDA  7,7(7)     jump around i/o code
* End of standard prelude.
12: LDA 7, 6(7)    * jump around add
13: ST 0, -1(5)    * store return address
14: LD 0, -3(5)    Arithmetic Expr load y
15: LDC 1, 1(0)    Arithmetic Expr load const z
16: ADD 0, 0, 1    Arithmetic Expr ADD x = y + z
17: ST 0, -3(5)    Arithmetic Expr store x
18: LD 7, -1(5)    * return to caller
19: LDA 7, 8(7)    * jump around main
20: ST 0, -1(5)    * store return address
21: LDC 0, 1(0)    Arithmetic Expr load const y
22: LDC 1, 2(0)    Arithmetic Expr load const z
23: ADD 0, 0, 1    Arithmetic Expr ADD x = y + z
24: ST 0, 1(6)    Arithmetic Expr store x
25: LD 0, 0(6)    assign
26: ST 0, 0(6)    assign
27: LD 7, -1(5)    * return to caller
28: ST 5, -11(5)    finale: push ofp


29: LDC 0, 10(0)    Arithmetic Expr load const y
30: ST 0, -14(5)    * store test val

31: LDA 5, -11(5)    push frame
32: LDA 0, 1(7)    load ac with ret ptr
33: LDA 7, -12(7)    jump to main loc
34: LD 5, 0(5)    pop frame
35: HALT 0, 0, 0    

